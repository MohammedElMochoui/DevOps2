language: minimal
before_install:
- docker version
- docker info
install:
- npm install newman
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- python -m unittest discover
- docker build -t swagger-spring-example:1.0.0 .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 swagger-spring-example:1.0.0
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs example_api
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag my_docker_reposetory/swagger_server my_docker_reposetory/swagger_server
- docker push my_docker_reposetory/swagger_server
env:
  global:
  - secure: UD7xYdbp3CNhSXGS/ntR0fUhAtsT5snzdZS67qcBXo/XQGwxn42If7tCjuTx5od6OljElsSCPTOx+IYqwNJCKOcomlKLDBmQze10PyvmluhG4Lje1eNBckDdiBAOCzeclFBSGi9ry8ysCLvXEnBl4LmNnX8wi6g3dbr3uzxkE+SbPx4wOLbK6u7dZoQAChUgT+phj4DxUHGmzb+kkkxvc2fyGQ2g+BxDKOW8r6XG/j29VC0cVx5xsPuftWAOk0KDegUL0E3J8i4mgLEpumILcgtek9sTYkj83WzfzqGuZfOIhlwPiytjrLKoNzUwSNNoyw6X3JRrkkl82fppm7PoLO80Cuzg/bL/BsC1uyYohOOC9S+mdXeXzRlD9hpkbLZUxNB8MtkvdxzuDw7K1T5k9YmMpTCTZ9VhRWo3DGqwBxtQYMv7i9waVmXtHg49CCWExMoP39kAGCJDZz8NIxsI6Erjw8g5zavQiL9wxjS8VJNXgaGXhi5lGs8FP7Vxec5sJKWRy/pP2GDLksWa0R/ER6QOeXHYQqhl0Ga16ME9dghQ8L/m9eE9OksvrC8RDQz8RJxozr5ySwMdIUt5q+qRvaoDV7VGKIu9hIFlHOlzhsSm5aRgYQhn3lJJfud5i7PFS4JyVu7DKbFtHYYx0eE+jCnxngeJonLbz4HmqvruGsM=
  - secure: IrfW/IZ3msVcciG6DdZKnZ4RFCOQjlz1GK6xYcDsx53un2MLhq26L7KYub9dYIKX+BcazhgRtCl/F+DDbCYxhnPgaL/3gKU9S3fMTaQrMDgh/9uGMmicEnFX2zYnIrzVpXmMFtTeniPceHElOKPXciLG92QcIduu0S4+Y819tFbs9AOWBjYH3CyQRE+vxb79HyFq4TDlWK/CER0Hmr226GF55xu7UMS/ZSUmBmbDh52BRGeNrJaOsCSbbgwVBx7ykqi6kfNkt4rbVN3AsFlQsILRGFjsFgwHOubZp8KDPf5l60vFQDrS7f2ouPa5Ry4d4JrYuHD0hyUcurV5C3xAA/XBIc/6aWa5fpGSAm/EGhiiMKe/0iTRr9+ecH+VHUUYDUaNnNmxyxbww5b0/K5UmsK8/KJhQOLGFdfvYixmGIxUMkgNZ4+g8sc/yNKwDy4XvmOh7hQrcSip4WGSy3xg8RkDlK4gkakdDhPK9Zllf02AczCjntAe5say3+rZhJyYxDaUOhkXHgAvz+NbyOkBxhderp/hDJt9LcFFMLMdHuKhzFEPECo/dtjjI3KHhM4uIfhfHqpS2G0f4ePs0z4yGtpfaJrKkNYvg0PEYwU+ONVwo+8474lD/lPmCVrCgIvAFsiH2rVj/lHLwz/8a5oTeVQHhuNMGGz6437qtnFxIKc=
